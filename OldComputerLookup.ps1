#  Script name:    OldComputerLookup.ps1
#  Purpose:        Searches Active Directory for stale computer accounts.
 
# Set this variable to find computers that have not logged on to the domain for over this number of days.
# Set this value to 0 to find ALL computers in AD.
$age = "90"
 
# Set the output file location for the CSV generated by this script.
$outputfile = "C:\Scripts\ComputerLookup.csv"
 
# Generates a date based on todays date minus the number of days you selected.
$agelimit = (get-date).adddays(-$age)
 
# Create a directory searcher object to begin searching for computers in AD.
# This method is used rather than Get-ADComputer to retain compatibility with Server 2003 / 2008.
$computerslookup = New-Object DirectoryServices.DirectorySearcher([ADSI]“”)
$computerslookup.filter = “(&(objectClass=computer))”
 
# For each computer found:
$computerslookup.Findall().GetEnumerator() | ForEach-Object {
 
# Convert the computer name to a string.
$name = [string]$_.Properties.name
 
# Convert the ticker style date gethered by the directory searcher for lastlogon in to a readable date.
$lastlogondate = [string]$_.Properties.lastlogon
$realtime = [DateTime]::FromFileTime($lastlogondate)
 
# If the last logon date is older than the age (in days) defined by $age:
    if ($agelimit -gt $realtime) {
 
    # Add the computer to the $oldcomputers array.
    $oldcomputers += @{"$name" = "$realtime"}
    }
}
 
# Export the results in to a CSV for easy reading.
$oldcomputers.getEnumerator() | select name, value | export-csv $outputfile
